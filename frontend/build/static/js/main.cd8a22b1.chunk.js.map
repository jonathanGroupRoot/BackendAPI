{"version":3,"sources":["components/services/theme.js","components/menu/index.js","components/services/API.js","components/read/index.js","components/create/index.js","App.js","serviceWorker.js","index.js"],"names":["state","theme","themeMode","bgcolor","bggood","color","goodcolor","store","createStore","initialState","action","type","connect","dispatch","className","style","backgroundColor","to","onClick","fun","API","Axios","create","baseURL","crossDomain","headers","Accept","Read","PopopDelete","mainData","idDelete","popopController","id","setState","deleteApi","a","async","delete","componentDidMount","get","then","response","data","themeChanged","this","props","maxWidth","paddingBottom","map","item","key","borderBottom","textDecoration","whiteSpace","nome","CPF","RG","endereco","sexo","nacionalidade","dataDeNascimento","dataDeCadastro","React","Component","Create","ativo","themeContent","hipedBallDirection","handleSubmit","event","preventDefault","dataForSubmit","post","telefone","console","log","catch","error","message","handleChange","target","name","value","handleChangeRegex","cpf","replace","hipedBallHandler","hiped","width","height","borderRadius","position","hipedBall","left","transition","parseFloat","onSubmit","border","onChange","placeholder","maxLength","undefined","App","path","component","Menu","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cd8a22b1.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\n\r\nconst state = {\r\n    theme:{\r\n        themeMode: 0,\r\n        bgcolor: '#dfe6e9',\r\n        bggood: '#0984e3',\r\n        color: \"#2d3436\",\r\n        goodcolor: '#dfe6e9',\r\n    },\r\n\r\n}\r\n\r\nfunction reducer(initialState = state,action){\r\n    if(action.type === 'Alterar tema'){\r\n        if(action.themeMode === 0){\r\n            return {\r\n                theme:{\r\n                    themeMode:1,\r\n                    bgcolor:\"#333\",\r\n                    bggood: \"#222\",\r\n                    color: \"#dfe6e9\",\r\n                    goodcolor: '#dfe6e9'\r\n                },\r\n            };\r\n        }else{\r\n            return {\r\n                theme:{\r\n                    themeMode: 0,\r\n                    bgcolor: '#dfe6e9',\r\n                    bggood: '#0984e3',\r\n                    color: \"#2d3436\",\r\n                    goodcolor: '#dfe6e9',\r\n                },\r\n            }\r\n        }\r\n        \r\n    }else{\r\n        return initialState;\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport './index.scss';\r\nfunction fun(theme){\r\n    return {\r\n        type:'Alterar tema',\r\n        themeMode:theme,\r\n    }\r\n}\r\nconst menu = ({theme,dispatch})=>{\r\n        return(\r\n            <div className='menu-main' style={({backgroundColor:theme.bggood})}>\r\n                <div>\r\n                    <Link className='LINK' to='/' style={({color:theme.goodcolor})}>HOME</Link>  \r\n                    <Link className='LINK' to='/create' style={({color:theme.goodcolor})}>ADD</Link>\r\n                </div>\r\n                <div>\r\n                    <p className='LINK' style={({color:theme.goodcolor})} onClick={()=>dispatch(fun(theme.themeMode))}>Alterar tema</p>\r\n                </div>  \r\n            </div>\r\n        );\r\n}\r\n\r\nexport default connect(state=>({theme:state.theme}))(menu);","import Axios from 'axios';\r\n\r\nconst API = Axios.create({baseURL: 'https://api-backend-lumen.herokuapp.com',\r\ncrossDomain: true,\r\nheaders:{\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n}\r\n});\r\n\r\nexport default API;","import React from 'react';\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport API from '../services/API.js';\r\nimport './style.scss';\r\n\r\nclass Read extends React.Component{\r\n    state = {\r\n        PopopDelete:'unwork',\r\n        mainData:[],\r\n        idDelete:0,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await API.get('/api/listPessoas').then(response=>{\r\n            this.setState({mainData:response.data});\r\n            \r\n        });\r\n    }\r\n    popopController = (id)=>{\r\n        this.setState({PopopDelete:\"delete\",idDelete:id});\r\n    }\r\n\r\n    deleteApi = async()=>{\r\n        await API.delete('/api/delete/'+this.state.idDelete);\r\n        this.componentDidMount();\r\n        this.setState({PopopDelete:\"unwork\"});\r\n    }\r\n\r\n    render(){\r\n        const themeChanged = this.props.theme;\r\n        return(\r\n            <div className='read-main' style={({backgroundColor:themeChanged.bgcolor})}>\r\n                <div className={this.state.PopopDelete} style={({color:themeChanged.color})}>\r\n                    <div>\r\n                        <h3>TEM CERTEZA?</h3>\r\n                        <p>Esse dado será apagado <b>PARA SEMPRE</b></p>\r\n                        <p>Caso prefira, apenas o oculte.</p>\r\n                    </div>\r\n                    <div>\r\n                        <button className='first-btn-delete' onClick={()=>this.deleteApi()}>APAGAR</button>\r\n                        <button className='second-btn-delete'>OCULTAR</button>\r\n                    </div>\r\n                </div>\r\n                <h3 style={({color:themeChanged.color})}>LISTA DE PESSOAS</h3>\r\n                <SimpleBar style={{ maxWidth: \"100%\",paddingBottom:'15px'}} className='read-table'>\r\n                    <table>\r\n                        <thead>\r\n                            <tr style={({backgroundColor:themeChanged.bggood})}>\r\n                                <th style={({color:themeChanged.goodcolor})}>AÇÃO</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>NOME</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>CPF</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>RG</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>ENDEREÇO</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>SEXO</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>NACIONALIDADE</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>DATA DE NASCIMENTO</th>\r\n                                <th style={({color:themeChanged.goodcolor})}>DATA DE CADASTRO</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n\r\n                                {this.state.mainData.map((item)=>{\r\n                                    return(\r\n                                        <tr key={item.id}>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color,textDecoration:'none',whiteSpace:'nowrap',})}>\r\n                                            <b style={({color:\"#d63031\",textDecoration:'none'})} onClick={()=>this.popopController(item.id)} className='link'>DELETAR </b> \r\n                                            | \r\n                                            <b><Link to={'/update/'+item.id} style={({color:'#0984e3',textDecoration:'none'})}> ALTERAR</Link></b>\r\n                                            </td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.nome}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.CPF}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.RG}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.endereco}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{((item.sexo)?'Masculino':'Feminino')}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.nacionalidade}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.dataDeNascimento}</td>\r\n                                            <td style={({color:themeChanged.color,borderBottom: \"1px solid \"+themeChanged.color})}>{item.dataDeCadastro}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n\r\n                                \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </SimpleBar>\r\n            </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state=>({theme:state.theme}))(Read);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport API from '../services/API.js';\r\nimport './style.scss';\r\n\r\nclass Create extends React.Component{\r\n    state = {\r\n        data:{\r\n            sexo:1,\r\n            CPF:\"\",\r\n            ativo:1,\r\n            dataDeCadastro:(`2020-01-12 11:11:11`),\r\n        },\r\n        themeContent:{\r\n            hipedBallDirection:'0%',\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // IMPORTANTE ===================================\r\n\r\n    handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        \r\n        const dataForSubmit = \r\n        await {\r\n            ...this.state.data,\r\n            dataDeNascimento:(this.state.data.dataDeNascimento + \" 11:11:11\"),\r\n        }\r\n        API.post(`/api/CadastrarPessoas?nome=${dataForSubmit.nome}&CPF=${dataForSubmit.CPF}&dataDeNascimento=${dataForSubmit.dataDeNascimento}&dataDeCadastro=${dataForSubmit.dataDeCadastro}&RG=${dataForSubmit.RG}&endereco=${dataForSubmit.endereco}&telefone=${dataForSubmit.telefone}&sexo=${dataForSubmit.sexo}&nacionalidade=${dataForSubmit.nacionalidade}&ativo=${dataForSubmit.ativo}`,)\r\n            .then((response)=>console.log(response.data))\r\n            .catch(error => {console.log(error.message)});\r\n    }\r\n\r\n\r\n\r\n    //================================================\r\n\r\n    handleChange = (event)=>{\r\n        console.log(this.state.data);\r\n        this.setState({\r\n            data:{\r\n                ...this.state.data,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChangeRegex = (event)=>{\r\n        let cpf = event.target.value\r\n              .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n              .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n              .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n              .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n              .replace(/(-\\d{2})\\d+?$/, '$1'); // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\r\n        \r\n        this.setState({data:{...this.state.data,CPF:cpf}});\r\n\r\n    }\r\n    hipedBallHandler = ()=>{\r\n        if(this.state.themeContent.hipedBallDirection === '0%'){\r\n            this.setState({data:{...this.state.data,sexo:0},themeContent:{hipedBallDirection:'50%'}})\r\n        }else{\r\n            this.setState({data:{...this.state.data,sexo:1},themeContent:{hipedBallDirection:'0%'}})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const themeChanged = this.props.theme;\r\n        const hiped = {\r\n            backgroundColor:themeChanged.goodcolor,\r\n            width:'75px',\r\n            height:'25px',\r\n            borderRadius:'75px',\r\n            position: 'relative',\r\n            \r\n\r\n        };\r\n        const hipedBall = {\r\n            position:'absolute',\r\n            left:this.state.themeContent.hipedBallDirection,\r\n            transition:'all 1s',\r\n            width : (parseFloat(hiped.width) / 2) + 'px',\r\n            backgroundColor : 'rgba(0,0,0,.6)',\r\n            height: hiped.height,\r\n            borderRadius : (parseFloat(hiped.width) / 2) + 'px',\r\n        }\r\n        return(\r\n            <div className='read-main' style={({backgroundColor:themeChanged.bgcolor})}>\r\n                <h3 style={({color:themeChanged.color})}>ADICIONE UMA PESSOA</h3>\r\n                <form style={({backgroundColor:themeChanged.bggood,color:themeChanged.goodcolor})} className='create-form' onSubmit={this.handleSubmit} id='create-form'>\r\n                {/**NOME */}\r\n                <label>\r\n                    Nome:\r\n                    <br/>\r\n                    <input type=\"text\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.nome} onChange={this.handleChange} name='nome' className='styledInput' placeholder='Nome'/>\r\n                </label>\r\n                <br/>\r\n                \r\n\r\n                {/* ENDEREÇO */}\r\n                <label>\r\n                    Endereço\r\n                    <br/>\r\n                    <input type=\"text\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.endereco} onChange={this.handleChange} name='endereco' className='styledInput' placeholder='Endreço'/>\r\n                </label>\r\n                <br/>\r\n                {/* TELEFONE */}\r\n                <label>\r\n                    Telefone\r\n                    <br/>\r\n                    <input type=\"text\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.telefone} onChange={this.handleChange} name='telefone' className='styledInput' placeholder='Telefone'/>\r\n                </label>\r\n                <br/>\r\n                {/* Nacionalidade */}\r\n                <label>\r\n                    Nacionalidade\r\n                    <br/>\r\n                    <input type=\"text\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.nacionalidade} onChange={this.handleChange} name='nacionalidade' className='styledInput' placeholder='Nacionalidade'/>\r\n                </label>\r\n                <br/>\r\n                {/**CPF */}\r\n                <label>\r\n                    CPF: \r\n                    <br/>\r\n                    <input type='text' style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} placeholder='CPF' id='CreateCPF' onChange={this.handleChangeRegex} value={this.state.data.CPF} maxLength='14' className='styledInput'/>\r\n                </label>\r\n                <br/>\r\n                 {/* RG */}\r\n                 <label>\r\n                    RG\r\n                    <br/>\r\n                    <input type=\"number\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.RG} onChange={this.handleChange} name='RG' className='styledInput' placeholder='RG'/>\r\n                </label>\r\n                <br/>\r\n                {/**data de Nascimento */}\r\n                <label>\r\n                    Data de Nascimento:\r\n                    <br/>\r\n                    <input type=\"date\" style={({color:themeChanged.goodcolor,backgroundColor:'transparent',border:'none',borderBottom:'1px solid '+themeChanged.goodcolor})} value={this.state.dataDeNascimento} onChange={this.handleChange} name='dataDeNascimento' className='styledInput' />\r\n                </label>\r\n                <br/>\r\n                \r\n                {/* SEXO */}\r\n                <label>Sexo</label>\r\n                <br/>\r\n                <div className='content-sexo'>\r\n                    <div className='hiped' style={hiped} onClick={this.hipedBallHandler}>\r\n                        <div className='hipedBall' style={hipedBall}></div>\r\n                    </div>\r\n                    <p>{((this.state.data.sexo === 1 || this.state.data.sexo === undefined)?\"Masculino\":\"Feminino\")}</p>\r\n                </div>\r\n                <button>ENVIAR</button>\r\n                </form>\r\n            </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state=>({theme:state.theme}))(Create);","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './components/services/theme';\nimport Menu from './components/menu';\nimport Read from './components/read';\nimport Create from './components/create';\n\n\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n    <Provider store={store}>\n      <Switch>\n        <Route path='/' component={Menu} />\n      </Switch>\n      <Switch>\n          <Route exact path='/' component={Read} />\n          <Route path='/create' component={Create} />\n      </Switch>\n    </Provider>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}